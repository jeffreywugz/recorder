/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class cc_fotoplace_video_SinglePlayer */

#ifndef _Included_cc_fotoplace_video_SinglePlayer
#define _Included_cc_fotoplace_video_SinglePlayer
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    createHandleForFFDecoder
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_fotoplace_video_SinglePlayer_createHandleForFFDecoder
  (JNIEnv *, jobject);

/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    releaseHandleForFFDecoder
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_fotoplace_video_SinglePlayer_releaseHandleForFFDecoder
  (JNIEnv *, jobject, jlong);

/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    openMediaFile
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_cc_fotoplace_video_SinglePlayer_openMediaFile
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    setupScaleFormat
 * Signature: (JFF)Z
 */
JNIEXPORT jboolean JNICALL Java_cc_fotoplace_video_SinglePlayer_setupScaleFormat
  (JNIEnv *, jobject, jlong, jfloat, jfloat);

/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    DecodeFrame
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_fotoplace_video_SinglePlayer_DecodeFrame
  (JNIEnv *, jobject, jlong);

/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    haveAudio
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_cc_fotoplace_video_SinglePlayer_haveAudio
  (JNIEnv *, jobject, jlong);

/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    haveVideo
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_cc_fotoplace_video_SinglePlayer_haveVideo
  (JNIEnv *, jobject, jlong);

/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    getWidth
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_cc_fotoplace_video_SinglePlayer_getWidth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    getHeight
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_cc_fotoplace_video_SinglePlayer_getHeight
  (JNIEnv *, jobject, jlong);

/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    GetEndOfDecode
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_cc_fotoplace_video_SinglePlayer_GetEndOfDecode
  (JNIEnv *, jobject, jlong);

/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    getDuration
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_cc_fotoplace_video_SinglePlayer_getDuration
  (JNIEnv *, jobject, jlong);

/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    getPosition
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_cc_fotoplace_video_SinglePlayer_getPosition
  (JNIEnv *, jobject, jlong);

/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    getChannel
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_fotoplace_video_SinglePlayer_getChannel
  (JNIEnv *, jobject, jlong);

/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    SeekTime
 * Signature: (JF)Z
 */
JNIEXPORT jboolean JNICALL Java_cc_fotoplace_video_SinglePlayer_SeekTime
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    getMediaInfo
 * Signature: (JLcc/fotoplace/video/timeBase;Lcc/fotoplace/video/timeBase;Lcc/fotoplace/video/timeBase;Lcc/fotoplace/video/timeBase;)Z
 */
JNIEXPORT jboolean JNICALL Java_cc_fotoplace_video_SinglePlayer_getMediaInfo
  (JNIEnv *, jobject, jlong, jobject, jobject, jobject, jobject);

/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    ffmpegCmdTool
 * Signature: ([Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_cc_fotoplace_video_SinglePlayer_ffmpegCmdTool
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     cc_fotoplace_video_SinglePlayer
 * Method:    avcodecinfo
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cc_fotoplace_video_SinglePlayer_avcodecinfo
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
